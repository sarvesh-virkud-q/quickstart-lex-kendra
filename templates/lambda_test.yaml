AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template for IAM

Parameters:     
  LambdaFunctionRole:
    Description: Lambda Function IAM Role Name 
    Type: String
    Default: Lambda-Function-Role

  LambdaFunctionPolicy:
    Description: Lambda Function IAM Policy Name 
    Type: String
    Default: Lambda-Function-Policy

  LambdaFunctionName:
    Description: The name of Lambda Function which handles querying of the index
    Type: String
    Default: lex-kendra-covid-bot-template
  
  S3BucketName:
    AllowedPattern: ^[a-z0-9][a-z0-9-.]*$
    Description: The name of S3 Bucket in which Lambda code is present
    Type: String
    Default: lex-kendra-code
  
  S3BucketKeyFallbackIntentHandler:
    Description: The name of the S3 key which has the Lambda Code for handling Fallback Intent
    Type: String
    Default: lex_kendra_bot.zip


Resources: 
  LambdaFunctionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - kendra.amazonaws.com
            - lex.amazonaws.com
            - s3.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      RoleName: !Ref LambdaFunctionRole

  LambdaFunctionIAMPolicy:
    DependsOn:
    - LambdaFunctionIAMRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Ref LambdaFunctionPolicy
      Roles:
      - Ref: LambdaFunctionIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:*
          Resource:
          - arn:aws:logs:*:*:*
        - Effect: Allow
          Action:
          - s3:*
          Resource:
          - "arn:aws:s3:::${S3BucketName}"
        - Effect: Allow
          Action:
          - lex:*
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - kendra:*
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - 'iam:GetRole'
          - 'iam:PassRole'
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - lambda:*
          Resource:
          - "*"
  
  LambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn: 
      - LambdaFunctionIAMRole
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaFunctionIAMRole.Arn
      Environment:
        Variables:
          KENDRA_INDEX: !ImportValue KendraIndexID
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Ref S3BucketKeyFallbackIntentHandler
      Runtime: python3.6
      Timeout: 300

  LambdaPermission:
    DependsOn: 
      - LambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: lex.amazonaws.com
   

Outputs:
  IAMRoleName:
    Description: Name of IAM Role used for handling Fallback Intent
    Value: !Ref LambdaFunctionIAMRole
  
  IAMRoleARN:
    Description: ARN of IAM Role used for handling Fallback Intent
    Value: !GetAtt LambdaFunctionIAMRole.Arn
  
  LambdaFunctionName:
    Description: Lambda Function Name used for handling Fallback Intent
    Value: !Ref LambdaFunction
  
  LambdaFunctionARN:
    Description: ARN of Lambda Function used for handling Fallback Intent
    Value: !GetAtt LambdaFunction.Arn

